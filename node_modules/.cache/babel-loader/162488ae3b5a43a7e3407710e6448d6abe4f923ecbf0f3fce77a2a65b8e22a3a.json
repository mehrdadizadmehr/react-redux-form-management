{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nexport const useForm = ({\n  initialValues,\n  validationSchema\n}) => {\n  _s();\n  const [values, setValues] = useState(initialValues);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const handleChange = (name, value) => {\n    setValues(prevValues => ({\n      ...prevValues,\n      [name]: value\n    }));\n    if (validationSchema) {\n      validateField(name, value);\n    }\n  };\n  const validateField = async (name, value) => {\n    try {\n      if (validationSchema) {\n        await validationSchema.validateAt(name, values);\n        setErrors(prevErrors => ({\n          ...prevErrors,\n          [name]: ''\n        }));\n      }\n    } catch (error) {\n      if (validationSchema) {\n        setErrors(prevErrors => ({\n          ...prevErrors,\n          [name]: error.errors[0]\n        }));\n      }\n    }\n  };\n  const handleSubmit = async event => {\n    if (event) {\n      event.preventDefault();\n    }\n    if (validationSchema) {\n      const validationErrors = {};\n      for (const key in values) {\n        try {\n          await validationSchema.validateAt(key, values);\n        } catch (error) {\n          validationErrors[key] = error.errors[0];\n        }\n      }\n      if (Object.keys(validationErrors).length > 0) {\n        setErrors(validationErrors);\n        return;\n      }\n    }\n    setIsSubmitting(true);\n    setIsSubmitting(false);\n  };\n  return {\n    values,\n    errors,\n    isSubmitting,\n    handleChange,\n    handleSubmit\n  };\n};\n_s(useForm, \"Xxj6gURHghnx0bvPFxLxiiW/oEM=\");","map":{"version":3,"names":["useState","useForm","initialValues","validationSchema","_s","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","name","value","prevValues","validateField","validateAt","prevErrors","error","handleSubmit","event","preventDefault","validationErrors","key","Object","keys","length"],"sources":["C:/Users/m.izadmehr.UTEL/Desktop/apply task/snapptrip/react-redux-form-management/src/hooks/useForm.ts"],"sourcesContent":["import { useState } from 'react';\r\nimport * as yup from 'yup';\r\n\r\ntype AnyObject = Record<string, any>;\r\n\r\ninterface UseFormProps<T extends AnyObject> {\r\n  initialValues: T;\r\n  validationSchema?: yup.ObjectSchema<T>;\r\n}\r\n\r\n\r\nexport const useForm = <T extends AnyObject>({ initialValues, validationSchema }: UseFormProps<T>) => {\r\n  const [values, setValues] = useState<T>(initialValues);\r\n  const [errors, setErrors] = useState<AnyObject>({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (name: string, value: any) => {\r\n    setValues((prevValues) => ({ ...prevValues, [name]: value }));\r\n    if (validationSchema) {\r\n      validateField(name, value);\r\n    }\r\n  };\r\n\r\n  const validateField = async (name: string, value: any) => {\r\n    try {\r\n      if (validationSchema) {\r\n        await validationSchema.validateAt(name, values);\r\n        setErrors((prevErrors) => ({ ...prevErrors, [name]: '' }));\r\n      }\r\n    } catch (error) {\r\n      if (validationSchema) {\r\n        setErrors((prevErrors) => ({ ...prevErrors, [name]: (error as yup.ValidationError).errors[0] as string }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event?: React.FormEvent) => {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (validationSchema) {\r\n      const validationErrors: AnyObject = {};\r\n\r\n      for (const key in values) {\r\n        try {\r\n          await validationSchema.validateAt(key, values);\r\n        } catch (error) {\r\n          validationErrors[key] = (error as yup.ValidationError).errors[0];\r\n        }\r\n      }\r\n\r\n      if (Object.keys(validationErrors).length > 0) {\r\n        setErrors(validationErrors);\r\n        return;\r\n      }\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n\r\n   \r\n\r\n    setIsSubmitting(false);\r\n  };\r\n\r\n  return {\r\n    values,\r\n    errors,\r\n    isSubmitting,\r\n    handleChange,\r\n    handleSubmit,\r\n  };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAWhC,OAAO,MAAMC,OAAO,GAAGA,CAAsB;EAAEC,aAAa;EAAEC;AAAkC,CAAC,KAAK;EAAAC,EAAA;EACpG,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAIE,aAAa,CAAC;EACtD,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAY,CAAC,CAAC,CAAC;EACnD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMW,YAAY,GAAGA,CAACC,IAAY,EAAEC,KAAU,KAAK;IACjDP,SAAS,CAAEQ,UAAU,KAAM;MAAE,GAAGA,UAAU;MAAE,CAACF,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;IAC7D,IAAIV,gBAAgB,EAAE;MACpBY,aAAa,CAACH,IAAI,EAAEC,KAAK,CAAC;IAC5B;EACF,CAAC;EAED,MAAME,aAAa,GAAG,MAAAA,CAAOH,IAAY,EAAEC,KAAU,KAAK;IACxD,IAAI;MACF,IAAIV,gBAAgB,EAAE;QACpB,MAAMA,gBAAgB,CAACa,UAAU,CAACJ,IAAI,EAAEP,MAAM,CAAC;QAC/CG,SAAS,CAAES,UAAU,KAAM;UAAE,GAAGA,UAAU;UAAE,CAACL,IAAI,GAAG;QAAG,CAAC,CAAC,CAAC;MAC5D;IACF,CAAC,CAAC,OAAOM,KAAK,EAAE;MACd,IAAIf,gBAAgB,EAAE;QACpBK,SAAS,CAAES,UAAU,KAAM;UAAE,GAAGA,UAAU;UAAE,CAACL,IAAI,GAAIM,KAAK,CAAyBX,MAAM,CAAC,CAAC;QAAY,CAAC,CAAC,CAAC;MAC5G;IACF;EACF,CAAC;EAED,MAAMY,YAAY,GAAG,MAAOC,KAAuB,IAAK;IACtD,IAAIA,KAAK,EAAE;MACTA,KAAK,CAACC,cAAc,CAAC,CAAC;IACxB;IAEA,IAAIlB,gBAAgB,EAAE;MACpB,MAAMmB,gBAA2B,GAAG,CAAC,CAAC;MAEtC,KAAK,MAAMC,GAAG,IAAIlB,MAAM,EAAE;QACxB,IAAI;UACF,MAAMF,gBAAgB,CAACa,UAAU,CAACO,GAAG,EAAElB,MAAM,CAAC;QAChD,CAAC,CAAC,OAAOa,KAAK,EAAE;UACdI,gBAAgB,CAACC,GAAG,CAAC,GAAIL,KAAK,CAAyBX,MAAM,CAAC,CAAC,CAAC;QAClE;MACF;MAEA,IAAIiB,MAAM,CAACC,IAAI,CAACH,gBAAgB,CAAC,CAACI,MAAM,GAAG,CAAC,EAAE;QAC5ClB,SAAS,CAACc,gBAAgB,CAAC;QAC3B;MACF;IACF;IAEAZ,eAAe,CAAC,IAAI,CAAC;IAIrBA,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,OAAO;IACLL,MAAM;IACNE,MAAM;IACNE,YAAY;IACZE,YAAY;IACZQ;EACF,CAAC;AACH,CAAC;AAACf,EAAA,CA7DWH,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}